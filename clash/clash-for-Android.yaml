proxy-providers:
  牛牛机场节点: # 代理集名称，不能重复
    url: "https://www.e300daniu.com/api/v1/client/subscribe?token=b0933cb6b1ebc1e5c3463b952cec91d0&flag=meta" # 类型为 http是则需要配置
    path: ./proxy_providers/牛牛机场节点.yaml # 文件路径，不可重复,可选，不填写时会使用MD5作为此文件的文件名
    # dialer-proxy: proxy # 为代理集合内所有节点附加dialer-proxy
    # filter: "(?i)港|hk|hongkong|hong kong" # 筛选满足关键词或正则表达式的节点
    exclude-filter: X1.2|X1.3|X1.4|X1.5|X3 # 排除满足关键词或正则表达式的节点
    # exclude-type: "ss|http" # 不支持正则表达式，通过 | 分割，根据节点类型排除,注意，proxy-groups 与 proxy-providers 写法不同
    <<: *p

  亏本机场节点:
    url: "https://knjc.cfd/api/v1/client/subscribe?token=93fbc809dc15f9fda045ab2ea50dd4ce&flag=meta"
    path: ./proxy_providers/亏本机场节点.yaml
    type: http
    interval: 1800
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
mode: rule
ipv6: true
log-level: silent
allow-lan: true
mixed-port: 7890
unified-delay: false
tcp-concurrent: true
external-controller-tls: 127.0.0.1:9999
find-process-mode: strict
global-client-fingerprint: chrome

sniffer:
  enable: true
  parse-pure-ip: true
  sniff: {HTTP: {ports: [80, 8080-8880]}, TLS: {ports: [443, 8443]}, QUIC: {ports: [443, 8443]}}
  skip-domain: ['Mijia Cloud']

tun:
  enable: true
  stack: system
  dns-hijack: [any:53]
  auto-route: true
  auto-detect-interface: true
  strict-route: true

dns:
  enable: true
  prefer-h3: true
  ipv6: true
  listen: 0.0.0.0:1053
  fake-ip-range: 198.18.0.1/16
  enhanced-mode: fake-ip
  fake-ip-filter:
    - '*'
    - '*.lan'
    - '*.localdomain'
    - '*.example'
    - '*.invalid'
    - '*.localhost'
    - '*.test'
    - '*.local'
    - '*.home.arpa'
    - 'time.*.com'
    - 'time.*.gov'
    - 'time.*.edu.cn'
    - 'time.*.apple.com'
    - 'time-ios.apple.com'
    - 'time1.*.com'
    - 'time2.*.com'
    - 'time3.*.com'
    - 'time4.*.com'
    - 'time5.*.com'
    - 'time6.*.com'
    - 'time7.*.com'
    - 'ntp.*.com'
    - 'ntp1.*.com'
    - 'ntp2.*.com'
    - 'ntp3.*.com'
    - 'ntp4.*.com'
    - 'ntp5.*.com'
    - 'ntp6.*.com'
    - 'ntp7.*.com'
    - '*.time.edu.cn'
    - '*.ntp.org.cn'
    - '+.pool.ntp.org'
    - 'time1.cloud.tencent.com'
    - 'music.163.com'
    - '*.music.163.com'
    - '*.126.net'
    - 'musicapi.taihe.com'
    - 'music.taihe.com'
    - 'songsearch.kugou.com'
    - 'trackercdn.kugou.com'
    - '*.kuwo.cn'
    - 'api-jooxtt.sanook.com'
    - 'api.joox.com'
    - 'joox.com'
    - 'y.qq.com'
    - '*.y.qq.com'
    - 'streamoc.music.tc.qq.com'
    - 'mobileoc.music.tc.qq.com'
    - 'isure.stream.qqmusic.qq.com'
    - 'dl.stream.qqmusic.qq.com'
    - 'aqqmusic.tc.qq.com'
    - 'amobile.music.tc.qq.com'
    - '*.xiami.com'
    - '*.music.migu.cn'
    - 'music.migu.cn'
    - '+.msftconnecttest.com'
    - '+.msftncsi.com'
    - 'localhost.ptlogin2.qq.com'
    - 'localhost.sec.qq.com'
    - '+.qq.com'
    - '+.tencent.com'
    - '+.srv.nintendo.net'
    - '*.n.n.srv.nintendo.net'
    - '+.cdn.nintendo.net'
    - '+.stun.playstation.net'
    - 'xbox.*.*.microsoft.com'
    - '*.*.xboxlive.com'
    - 'xbox.*.microsoft.com'
    - 'xnotify.xboxlive.com'
    - '+.battlenet.com.cn'
    - '+.wotgame.cn'
    - '+.wggames.cn'
    - '+.wowsgame.cn'
    - '+.wargaming.net'
    - 'proxy.golang.org'
    - 'stun.*.*'
    - 'stun.*.*.*'
    - '+.stun.*.*'
    - '+.stun.*.*.*'
    - '+.stun.*.*.*.*'
    - '+.stun.*.*.*.*.*'
    - 'heartbeat.belkin.com'
    - '*.linksys.com'
    - '*.linksyssmartwifi.com'
    - '*.router.asus.com'
    - 'mesu.apple.com'
    - 'swscan.apple.com'
    - 'swquery.apple.com'
    - 'swdownload.apple.com'
    - 'swcdn.apple.com'
    - 'swdist.apple.com'
    - 'lens.l.google.com'
    - 'stun.l.google.com'
    - 'na.b.g-tun.com'
    - '+.nflxvideo.net'
    - '*.square-enix.com'
    - '*.finalfantasyxiv.com'
    - '*.ffxiv.com'
    - '*.ff14.sdo.com'
    - 'ff.dorado.sdo.com'
    - '*.mcdn.bilivideo.cn'
    - '+.media.dssott.com'
    - 'shark007.net'
    - 'Mijia Cloud'
    - '+.cmbchina.com'
    - '+.cmbimg.com'
    - 'adguardteam.github.io'
    - 'adrules.top'
    - 'anti-ad.net'
    - 'local.adguard.org'
    - 'static.adtidy.org'
    - '+.sandai.net'
    - '+.n0808.com'
    - '+.3gppnetwork.org'
    - '+.uu.163.com'
    - 'ps.res.netease.com'
 nameserver:
    - 'https://223.5.5.5/dns-query#h3=true'
    - https://1.12.12.12/dns-query
# #这里是订阅更新和延迟测试相关的
p: &p 
  type: http # provider 类型，可选 http/file
  interval: 1800 # 更新 provider 的时间，单位为秒
  health-check:  # 健康检查（测试延迟）
    enable: true # 是否启用，可选 true/false
    # 健康检查地址，推荐使用以下地址之一
    # Cloudflare:
    # https://cp.cloudflare.com/generate_204
    # Google：
    # http://www.gstatic.com/generate_204
    # https://www.gstatic.com/generate_204
    url: https://www.gstatic.com/generate_204
    interval: 300 # 健康检查间隔时间，单位为秒

# # proxy 相关
pr: &pr
  type: select
  proxies:
    - 🚀 节点选择
    - ♻️ 自动选择
    - 🔯 故障转移
    - 🇭🇰 香港节点
    - 🇸🇬 新加坡节点
    - 🇯🇵 日本节点
    - 🇰🇷 韩国节点
    - 🇹🇼 台湾节点
    - 🇺🇸 美国节点
    - 亏本机场
    - 其它地区
    - 🎯 全球直连

pr1: &pr1
  type: select
  proxies: 
    - 🎯 全球直连
    - 🚀 节点选择

use1: &use1
  type: load-balance
  use:
    - 牛牛机场节点
    # - 亏本机场

# ######### 锚点 end #######

unified-delay: true # 更换延迟计算方式,去除握手等额外延迟,可选值 true/false
tcp-concurrent: true #TCP并发,可选值 true/false

rule-anchor:
  ip: &ip
    type: http
    interval: 86400
    behavior: ipcidr
    format: yaml

  domain: &domain
    type: http
    interval: 86400
    behavior: domain
    format: yaml

  classical: &classical
    type: http
    interval: 86400
    behavior: classical
    format: yaml
proxy-groups:
  - name: 订阅信息
    type: select
    use:
      - 牛牛机场节点
      - 亏本机场节点
    filter: 流量|重置|套餐

  - name: 亏本机场
    type: fallback
    proxies:
      - 亏本机场0.1倍
      - 亏本机场-其他倍率
    
  - name: 🚀 节点选择
    type: select
    proxies:
      - 🔯 故障转移
      - ♻️ 自动选择
      - 🇭🇰 香港节点
      - 🇸🇬 新加坡节点
      - 🇯🇵 日本节点
      - 🇹🇼 台湾节点
      - 🇰🇷 韩国节点
      - 亏本机场
      - 🇺🇸 美国节点
      - 其它地区
      - 🎯 全球直连
    use:
      - 牛牛机场节点
      # - 亏本机场
    # filter: "(?i)港|hk|hongkong|hong kong" # 筛选满足关键词或正则表达式的节点
    exclude-filter: 流量|重置|套餐|X1.2|X1.3|X1.4|X1.5|X3 # 排除满足关键词或正则表达式的节点
    # exclude-type: "Shadowsocks|Http" #不支持正则表达式，通过 | 分割，根据节点类型排除 注意，proxy-groups 与 proxy-providers 写法不同
    #disable-udp: true # 禁用该策略组的UDP
  
  - name: ♻️ 自动选择
    type: url-test
    use:
      - 牛牛机场节点
    url: 'https://www.gstatic.com/generate_204'
    interval: 300
    tolerance: 30 
    # 容差,新的最低延迟的代理延迟大于之前选择的节点延迟减去容差值时,才会切换节点,默认0,单位ms
    # 例: 上次选择的代理节点这次测试延迟为50ms,容差10,则必须有低于40ms的节点才会切换
    exclude-filter: 流量|重置|套餐|X1.2|X1.3|X1.4|X1.5|X3
    #lazy: true # 打开lazy时,未选择到当前策略组时,则不会进行测试
    #disable-udp: true # 禁用该策略组的UDP

  - name: 🔯 故障转移
    type: fallback
    proxies:
      - 🇭🇰 香港节点
      - 🇸🇬 新加坡节点
      - 🇯🇵 日本节点
      - 🇹🇼 台湾节点
      - 🇰🇷 韩国节点
      - 亏本机场
      - 🇺🇸 美国节点
      - 其它地区
    url: 'https://www.gstatic.com/generate_204'
    interval: 300
    #lazy: true
    #disable-udp: true

  - name: ✈️ Google
    <<: *pr

  - name: 📲 Telegram
    <<: *pr

  - name: 📈 网络测试
    <<: *pr

  - name: 🅿️ PikPak
    type: fallback
    proxies:
      - 🇸🇬 新加坡节点
      - 🇭🇰 香港节点
      - 🇯🇵 日本节点
      - 🇹🇼 台湾节点
      - 🇰🇷 韩国节点
      - 亏本机场
      - 🇺🇸 美国节点
      - 其它地区
    url: 'https://www.gstatic.com/generate_204'
    interval: 300

  - name: 📢 Twitter
    <<: *pr

  - name: 🎬 Pixiv
    <<: *pr

  - name: 🔮 ehentai
    <<: *pr

  - name: 📽️ 哔哩哔哩
    <<: *pr

  - name: 📺 巴哈姆特
    <<: *pr

  - name: 🤖 YouTube
    <<: *pr

  - name: 🎥 NETFLIX
    <<: *pr
  - name: Ⓜ️ Spotify
    <<: *pr

  - name: 👨‍💻 Github
    <<: *pr

  - name: VPS
    type: select
    proxies:
      - 🇯🇵 日本节点
      - 🇺🇸 美国节点
      - 🇹🇼 台湾节点
      - 🇰🇷 韩国节点
      - 亏本机场
    url: 'https://www.gstatic.com/generate_204'
    interval: 300

  - name: 🐟 漏网之鱼
    <<: *pr
    #disable-udp: true

  - name: 🎯 全球直连
    type: select
    proxies: 
      - DIRECT

  - name: 🛑 全球拦截
    type: select
    proxies: 
      - REJECT
      - DIRECT

#分隔,下面是地区分组
  - name: 🇭🇰 香港节点
    <<: *use1
    filter: "(?i)港|hk|hongkong|hong kong" # 筛选满足关键词或正则表达式的节点
    exclude-filter: X1.2|X1.3|X1.4|X1.5|X3  # 排除满足关键词或正则表达式的节点
    exclude-type: ""  # 排除节点类型,不支持正则表达式，通过 | 分隔

  - name: 🇸🇬 新加坡节点
    <<: *use1
    filter: "(?i)(新|sg|singapore)"
    exclude-filter: X1.2|X1.3|X1.4|X1.5|X3

  - name: 🇰🇷 韩国节点
    <<: *use1
    filter: "(?i)(韩|kr|Korea)"
    exclude-filter: X1.2|X1.3|X1.4|X1.5|X3

  - name: 🇹🇼 台湾节点
    <<: *use1
    filter: "(?i)台|tw|taiwan"
    exclude-filter: X1.2|X1.3|X1.4|X1.5|X3

  - name: 🇯🇵 日本节点
    <<: *use1
    filter: "(?i)日|jp|japan"
    exclude-filter: X1.2|X1.3|X1.4|X1.5|X3

  - name: 🇺🇸 美国节点
    <<: *use1
    filter: "(?i)美|us|unitedstates|united states"
    exclude-filter: X1.2|X1.3|X1.4|X1.5|X3

  - name: 其它地区
    type: url-test
    use:
      - 牛牛机场节点
    filter: "(?i)^(?!.*(?:🇭🇰|🇯🇵|🇺🇸|🇸🇬|🇨🇳|港|hk|hongkong|韩|kr|Korea|新|sg|singapore|台|tw|taiwan|日|jp|japan|美|us|unitedstates)).*"
    exclude-filter: 流量|重置|套餐|X1.2|X1.3|X1.4|X1.5|X3

  - name: 亏本机场0.1倍
    type: url-test
    use:
      - 亏本机场节点
    filter: (?i)0.1倍|美国|法国

  - name: 亏本机场-其他倍率
    type: url-test
    use:
      - 亏本机场节点
    exclude-filter: (?i)到期|流量|10倍|0.1倍|美国|法国

rules:
  # 自定义规则
  - DOMAIN-SUFFIX,000719.xyz,VPS
  - IP-CIDR,23.94.44.22/25,VPS
  - PROCESS-NAME,netbird,🎯 全球直连
  - PROCESS-NAME,frpc,🎯 全球直连

  # 自定义RULE-SET
  - RULE-SET,my_direct,🎯 全球直连
  - RULE-SET,my_proxy,🚀 节点选择
  - RULE-SET,networktest,📈 网络测试
  - RULE-SET,PikPak,🅿️ PikPak

  # domain
  - GEOIP,lan,🎯 全球直连,no-resolve
  - RULE-SET,biliintl_domain,📽️ 哔哩哔哩
  - RULE-SET,ehentai_domain,🔮 ehentai
  - RULE-SET,github_domain,👨‍💻 Github
  - RULE-SET,twitter_domain,📢 Twitter
  - RULE-SET,youtube_domain,🤖 YouTube
  - RULE-SET,google_domain,✈️ Google
  - RULE-SET,telegram_domain,📲 Telegram
  - RULE-SET,netflix_domain,🎥 NETFLIX
  - RULE-SET,bilibili_domain,📽️ 哔哩哔哩
  - RULE-SET,bahamut_domain,📺 巴哈姆特
  - RULE-SET,spotify_domain,Ⓜ️ Spotify
  - RULE-SET,pixiv_domain,🎬 Pixiv
  - RULE-SET,geolocation-!cn,🚀 节点选择

# ip
  - RULE-SET,google_ip,✈️ Google,no-resolve
  - RULE-SET,netflix_ip,🎥 NETFLIX,no-resolve
  - RULE-SET,telegram_ip,📲 Telegram,no-resolve
  - RULE-SET,twitter_ip,📢 Twitter,no-resolve
  - RULE-SET,cn_domain,🎯 全球直连,no-resolve
  - RULE-SET,cn_ip,🎯 全球直连,no-resolve
# 漏网之鱼，白名单模式，没有命中规则的网络流量，统统使用代理
  - MATCH,🐟 漏网之鱼

rule-providers:
# 自定义规则集
  PikPak:
    <<: *classical
    url: "https://gist.githubusercontent.com/NASA0719/fa7d4b2378410c394eba2ffed3f27d29/raw/pikpak.list"
  networktest:
    type: http
    behavior: classical
    format: text
    url: "https://cdn.jsdelivr.net/gh/DustinWin/ruleset_geodata@clash-ruleset/networktest.list"
    interval: 86400
  my_proxy:
    <<: *classical
    url: "https://raw.githubusercontent.com/NASA0719/shellcrash-rule/main/clash/clash_proxy.list"
  my_direct:
    <<: *classical
    url: "https://raw.githubusercontent.com/NASA0719/shellcrash-rule/main/clash/clash_direct.list"

  private:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.yaml"
  cn_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.yaml"
  biliintl_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/biliintl.yaml"
  ehentai_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ehentai.yaml"
  github_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.yaml"
  twitter_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/twitter.yaml"
  youtube_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.yaml"
  google_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.yaml"
  telegram_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.yaml"
  netflix_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.yaml"
  bilibili_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/bilibili.yaml"
  bahamut_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/bahamut.yaml"
  spotify_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/spotify.yaml"
  pixiv_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/pixiv.yaml"
  geolocation-!cn:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.yaml"

  cn_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.yaml"
  google_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.yaml"
  netflix_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.yaml"
  twitter_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/twitter.yaml"
  telegram_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.yaml"

